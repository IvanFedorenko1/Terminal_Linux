Home Work 1. Git Bash

1) Посмотреть где я — pwd

2) Создать папку  —   mkdir test1

3) Зайти в папку  —   cd test1

4) Создать 3 папки — mkdir -p {test11,test22,test33}

5) Зайти в любую папку  —  cd test11

6) Создать 5 файлов (3 txt, 2 json) —  touch {file1.txt,file2.txt,file3.txt,file4.json,file5.json}

7) Создать 3 папки   —  mkdir -p {test4,test5,test6}

8.)  Вывести список содержимого папки   —   ls -la

9) + Открыть любой txt файл  —   vim file1.txt

10)  + написать туда что-нибудь, любой текст. — Нажать клавишу ‘i’, ввести любой текст 
iptables –A FORWARD –s 172.16.12.14/29 –o eth1 –j ACCEPT
iptables –A FORWARD –d 192.168.0.0/16 –m state - -state ESTABLISHED,RELATED –i eth1 –j ACCEPT
iptables –A FORWARD –d 172.16.12.14/29 –m state - -state ESTABLISHED,RELATED –i eth1 –j ACCEPT


11)+ сохранить и выйти   —   нажать Esc и ввести “:wq” + Enter

12) Выйти из папки на уровень выше  — cd ..

13) переместить любые 2 файла, которые вы создали, в любую другую папку -  mv file4.json file5.json test4/

14) скопировать любые 2 файла, которые вы создали, в любую другую папку -  cp file1.txt file2.txt test5/

15) Найти файл по имени  —       find - name "file1.txt"

16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает. - tail file1.txt (отобразится содержимое в реальном времени)
grep state file1.txt (отобразятся все строки, содержащие ‘state’ в данном текстовом файле)
              

17) вывести несколько первых строк из текстового файла 
head file1.txt 2

18) вывести несколько последних строк из текстового файла
 tail -2 file1.txt

19) просмотреть содержимое длинного файла (команда less)  -   less [option] file1.txt (для возврата нажать "Q")
опции less
-a,  — не осуществлять поиск в тексте, который в данный момент отображен на экране;
-bn,  — задать размер буфера памяти;
-c,  — листать текст, полностью стирая содержимое экрана (построчная прокрутка работать не будет);
-Dxcolor,  — задать цвет отображаемого текста;
-E,  — выйти, когда утилита достигнет конца файла;
-e,  — выйти, когда утилита второй раз достигнет конца файла;
-F,  — выйти, если содержимое файла помещается на одном экране;
-f,  — открыть специальный файл;
-hn,  — задать максимальное количество строк для прокрутки назад;
-yn,  — задать максимальное количество строк для прокрутки вперёд;
-i, — игнорировать регистр;
-I,  — игнорировать регистр, даже если паттерн для поиска содержит заглавные буквы;
-jn,  — указать, в какой строке должна быть выведена искомая информация;
-J,  — пометить строки, соответствующие результатам поиска;
-n,  — не выводить номера строк;
-N,  — вывести номера строк;
-s, s — заменить множество идущих подряд пустых строк одной пустой строкой;
-w,  — выделить первую строку нового фрагмента текста.

20) вывести дату и время
$ date 
$ date -u (UTC)
